#Car Tracking  using computer vision
#Step1: Get a log of car images
#Step2: Make them all balck and white
#Step3: use "Haar Features" Edge,Line and Four-Rectanlge
import cv2

#img path
img_file='car.jpg'
#video = cv2.VideoCapture('v2.mp4')
video = cv2.VideoCapture('v5.mp4')

#Pre-Trained  car and pedestrain classifier
car_tracker_file = 'car_detector.xml'
pedestrain_tracker_file = 'haarcascade_fullbody.xml'

#create car classifier
car_tracker = cv2.CascadeClassifier(car_tracker_file)
pedestrain_tracker=cv2.CascadeClassifier(pedestrain_tracker_file)

#It read single frame from the video, it return two value 1) if read success is or not 2)frame
while True:
 #Read the current frame
    (read_successful, frame) = video.read()

    #Safe coding.
    if read_successful:
        grayscaled_frame = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    else:
        break  
    
    #detect cars and pedestrians
    cars = car_tracker.detectMultiScale(grayscaled_frame) 
    pedestrains = pedestrain_tracker.detectMultiScale(grayscaled_frame) 

    #Draw rectangle around cars   
    for(x,y,w,h) in cars:
        cv2.rectangle(frame, (x, y),(x+w, y+h),(0,0,255),2) 
    
    #Draw rectangle around pedestrain 
    for(x,y,w,h) in pedestrains:
        cv2.rectangle(frame, (x, y),(x+w, y+h),(0,255,255),2) 

    #detect cars
    cv2.imshow('Clever Pro car Detecor',frame)

    key=cv2.waitKey(1)
    ### Stop if Q key is pressed(q ascii number)
    if key==81 or key==113:
        break
print("Code Completed") 
video.release()